// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using Domain.Entities;
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Data;
using System.Threading;
using System.Threading.Tasks;

namespace Domain.DboContext
{
    public partial interface IArianTestContextProcedures
    {
        Task<int> DeleteCommentAsync(int? comment_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeletePostAsync(int? post_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteReplyAsync(int? reply_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteUserAsync(int? user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetCommentsResult>> GetCommentsAsync(int? comment_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetCommentsByFilterResult>> GetCommentsByFilterAsync(int? comment_id, int? post_id, int? user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetPostsResult>> GetPostsAsync(int? post_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetPostsByFilterResult>> GetPostsByFilterAsync(int? PostId, string Title, int? UserId, string Username, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetRepliesResult>> GetRepliesAsync(int? reply_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetRepliesByCommentIdResult>> GetRepliesByCommentIdAsync(int? comment_Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetReplyResult>> GetReplyAsync(int? reply_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetUserResult>> GetUserAsync(int? user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetUserByUsernameResult>> GetUserByUsernameAsync(string username, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetUsersResult>> GetUsersAsync(int? user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> InsertCommentAsync(int? post_id, int? user_id, string content, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> InsertPostAsync(int? user_id, string title, string content, string image_url, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> InsertReplyAsync(int? comment_id, int? user_id, string content, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> InsertUserAsync(string username, string password, string email, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UpdateCommentAsync(int? comment_id, int? post_id, int? user_id, string content, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UpdatePostAsync(int? post_id, int? user_id, string title, string content, string image_url, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UpdateReplyAsync(int? reply_id, int? comment_id, int? user_id, string content, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UpdateUserAsync(int? user_id, string username, string password, string email, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
    }
}
